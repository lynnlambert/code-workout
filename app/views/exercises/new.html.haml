-# %h1 New Exercise
-# - if params[:question_type].nil?
-#   = link_to 'Create a coding problem', new_exercise_path(question_type: 'coding')
-#   %br
-#   = link_to 'Create an MCQ exercise', new_exercise_path(question_type: 'mcq')
-# - else
-#   - type = params[:question_type] == 'mcq' ? 1 : 2
-#   = render 'form', qtype: type
-#
-# %br
-# = link_to 'Back', exercises_path


%h1 New Exercise

= javascript_include_tag('exercise_form')
= semantic_form_for @exercise, html: { class: 'form-horizontal' } do |f|
  = f.semantic_errors

  .form-group
    = f.label :name, 'Name *', class: 'control-label col-md-2 col-xs-1'
    .col-lg-7.col-md-6.col-xs-7
      = f.text_field :name, class: 'form-control', maxlength: 255, placeholder: 'Enter a name for this exercise'

  .form-group
    = f.label :is_public, 'Visible in Gym?', class: 'control-label col-md-2 col-xs-1'
    .col-lg-7.col-md-6.col-xs-7
      = f.check_box :is_public
      %small.col-xs-offset-1.text.text-warning
        Checking this box will make the Exercise visible in the Gym for all users to practice or use in their courses.

  .form-group
    = f.label :language_list, 'Language list', class: 'control-label col-md-2 col-xs-1'
    .col-lg-7.col-md-6.col-xs-7
      = f.text_field :language_list, maxlength: 255, as: :string, class: 'form-control',
        placeholder: 'Enter the languages associated with this Exercise.'

  .form-group
    = f.label :external_id, 'External Id', class: 'control-label col-md-2 col-xs-1'
    .col-lg-7.col-md-6.col-xs-7
      = f.text_field :external_id, maxlength: 255, class: 'form-control',
        placeholder: 'Enter a unique text Id for this exercise, e.g. recur-bin-tree'

  .form-group
    = f.label :question_type, 'Question Type', class: 'control-label col-md-2 col-xs-1'
    .col-xs-2
      = f.select :question_type, Exercise.question_types.collect { |k, v| [ v, k ] }, { include_blank: true },
        { class: 'form-control', minwidth: 25 }
    .col-xs-offset-2
      %small.text.text-warning.question-type-msg Please select a question type to continue.

  #question-type-form
    = semantic_fields_for :exercise_version do |ev|
      = render 'exercise_version_fields', f: ev
